@model IEnumerable<ResumeSkill>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@section addcss{
    <link rel="stylesheet" href="~/libs/toastr.js/toastr.css">
}


    <div class="page-wrapper">
        <div class="page-header">
            <div class="row align-items-end">
                <div class="col-lg-8">
                    <div class="page-header-title">
                        <div class="d-inline">
                            <h4>Bootstrap Border Sizes</h4>
                            <span>
                                lorem ipsum dolor sit amet, consectetur adipisicing
                                elit
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="page-header-breadcrumb">
                        <ul class="breadcrumb-title">
                            <li class="breadcrumb-item" style="float: left;">
                                <a asp-controller="Dashboard" asp-action="index"> <i class="feather icon-home"></i> </a>
                            </li>

                            <li class="breadcrumb-item" style="float: left;">
                                <span>Skills</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="page-body">
            <div class="card">
                <div class="card-header">
                    <h5>Horizontal Borders</h5>
                    <span>
                        Example of <code>horizontal</code> table borders. This is a
                        default table border style attached to <code>.table</code> class.
                        All borders have the same grey color and style, table itself doesn't
                        have a border, but you can add this border using
                        <code>.table-framed</code> class added to the table with
                        <code>.table</code> class.
                    </span>

                </div>
                <div class="card-block table-border-style">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        <span>Category</span>
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Name)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.View)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Description)
                                    </th>
                                    <th class="operations">
                                        <a asp-action="Create" class="btn btn-sm btn-primary">
                                            <i class="fa fa-plus"></i>
                                        </a>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="ellipse">
                                        @Html.DisplayFor(modelItem => item.ResumeCategory.Name)
                                    </td>
                                    <td class="ellipse">
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td class="ellipse">
                                        @if(item.View != null){
                                        @Html.DisplayFor(modelItem => item.View)
                                        }
                                        else{
                                            <span>bar</span>
                                        }
                                    </td>
                                    <td class="ellipse ">
                                        @item.Description.ToPlainText()
                                    </td>
                                    <td class="operations table-imaged">
                                        @if(item.SelectedDate == null){
                                            <a class="btn btn-sm btn-success" onclick="selectedDate(@item.Id, '@item.Name')"><i class="fa-sharp fa-solid fa-check"></i></a>
                                        }
                                        else if(item.SelectedDate != null){
                                            <a class="btn btn-sm btn-danger" onclick="selectedDate(@item.Id, '@item.Name')"><i class="fa-solid fa-x"></i></a>
                                        }
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i class="fa-solid fa-pencil"></i></a>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info"><i class="fa-solid fa-eye"></i></a>
                                        <a class="btn btn-sm btn-danger" onclick="removeEntity(@item.Id, '@item.Name')"><i class="fa-solid fa-trash-can"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @Html.AntiForgeryToken()
</div>

@section addjs{
    <script src="~/libs/sweetalert/sweetalert.min.js"></script>
    <script src="~/libs/toastr.js/toastr.min.js"></script>
    <script src="~/libs/toastr.js/toastr.customize.js"></script>

    <script class="removeable">
        function removeEntity(id, name) {
            swal(`Are you sure you want to delete ${name}?`, {
                title: "Diqqet!",
                text: `Are you sure you want to delete ${name}?`,
                icon: "warning",
                buttons: true,
                dangerMode: true,
                buttons: ["No", "Yes"]
            })
                .then((value) => {

                    if (value == true) {

                        let vToken = $('[name=__RequestVerificationToken]').val();

                        let formData = new FormData();
                        formData.set('__RequestVerificationToken', vToken);
                        formData.set('id', id);

                        $.ajax({
                            url: `@Url.Action("Delete")`,
                            type: 'POST',
                            data: formData,
                            contentType: false,
                            processData: false,
                            success: function (response) {
                                console.log(response)
                                if (response.error == true) {
                                    toaster.error(response.message, "Xeta");
                                    return;
                                }
                                location.reload();
                            },
                            error: function (errorResponse) {
                                console.error(errorResponse);
                            }
                        });
                    }


                });

        }

        function selectedDate(id, name) {
            swal(`Are you sure you want to publish ${name}?`, {
                title: "Diqqet!",
                text: `Are you sure you want to publish ${name}?`,
                icon: "warning",
                buttons: true,
                dangerMode: true,
                buttons: ["No", "Yes"]
            })
                .then((value) => {

                    if (value == true) {

                        let vToken = $('[name=__RequestVerificationToken]').val();

                        let formData = new FormData();
                        formData.set('__RequestVerificationToken', vToken);
                        formData.set('id', id);

                        $.ajax({
                            url: `@Url.Action("Selected")`,
                            type: 'POST',
                            data: formData,
                            contentType: false,
                            processData: false,
                            success: function (response) {
                                console.log(response)
                                if (response.error == true) {
                                    toaster.error(response.message, "Xeta");
                                    return;
                                }
                                location.reload();
                            },
                            error: function (errorResponse) {
                                console.error(errorResponse);
                            }
                        });
                    }


                });

        }
    </script>
     }